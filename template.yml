AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.ordersHandler
      Runtime: nodejs20.x
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: post
    Role: !GetAtt RonaldOrderItemsFunctionRole.Arn

  OrderItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.orderItemsHandler
      Runtime: nodejs20.x
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
      Events:
        OrderItemsApiEvent:
          Type: Api
          Properties:
            Path: /orderItems
            Method: post
    Role: !GetAtt RonaldOrderItemsFunctionRole.Arn

  OrdersByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.ordersByIdHandler
      Runtime: nodejs20.x
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
      Events:
        OrdersByIdApiEvent:
          Type: Api
          Properties:
            Path: /orders/{orderId}
            Method: get
    Role: !GetAtt RonaldOrderItemsFunctionRole.Arn

  BoxesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.boxesHandler
      Runtime: nodejs20.x
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
      Events:
        BoxesApiEvent:
          Type: Api
          Properties:
            Path: /boxes
            Method: get
    Role: !GetAtt RonaldOrderItemsFunctionRole.Arn

  ShowAllOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: index.showAllOrders # Assuming your 'showAllOrders' function is in index.js
      Runtime: nodejs20.x
      Environment:
        Variables:
          REDIS_HOST: !GetAtt MyElasticacheRedis.RedisEndpoint.Address
      Events:
        ShowOrdersApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: get
    Role: !GetAtt RonaldOrderItemsFunctionRole.Arn

  # Add IAM roles with required tag permissions
  RonaldOrderItemsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RonaldOrderItemsFunctionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: MyTag
          Value: MyValue

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.0.0/24

  MyElasticacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for ElastiCache
      SubnetIds:
        - subnet-02c217f126c0ce1d5

  MyElasticacheRedis:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      CacheNodeType: cache.t2.micro
      Engine: redis
      NumCacheNodes: 1
      Port: 6379
      VpcSecurityGroupIds:
        - !GetAtt MySecurityGroup.GroupId
      CacheSubnetGroupName: !Ref MyElasticacheSubnetGroup

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: vpc-066e6a637e37f2752
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
